name: CD - Cotizador Frontend Dev to Azure Container Registry

on:
    push:
        branches:
            - main
    workflow_dispatch:

env:
    IMAGE_NAME: my-fastapi-app-prod

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout del repositorio
              uses: actions/checkout@v4

            - name: Obtener el hash del Ãºltimo commit
              id: get_commit 
              run: echo "TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

            - name: Iniciar sesiÃ³n en el registro de contenedores de Azure
              run: echo ${{ secrets.azurecr_password }} | docker login ${{ secrets.azurecr_uri }} -u ${{ secrets.azurecr_username }} --password-stdin
            
            - name: Contruir imagen de Docker
              run: |
                echo "ðŸ”¨ Construyendo la imagen base de Docker para producciÃ³n."
                docker build -f Dockerfile.prod -t $IMAGE_NAME:${{ env.TAG }} .

            - name: AÃ±adir etiquetas a la imagen de Docker
              run: |
                # Crear una imagen con el tag del Ãºltimo commit `${{ env.TAG }}`
                echo "ðŸ”— Creando un enlace simbÃ³lico a $IMAGE_NAME:${{ env.TAG }}"
                docker tag $IMAGE_NAME:${{ env.TAG }} ${{ secrets.azurecr_uri }}/$IMAGE_NAME:${{ env.TAG }}
                # Confirmar que la imagen se ha creado
                echo "âœ… La imagen $IMAGE_NAME:${{ env.TAG }} se ha creado correctamente\n"

                # Crear una imagen con el tag `latest`
                echo "ðŸ”— Creando un enlace simbÃ³lico a $IMAGE_NAME:latest"
                docker tag $IMAGE_NAME:${{ env.TAG }} $IMAGE_NAME:latest
                # Confirmar que la imagen se ha creado
                echo "âœ… La imagen $IMAGE_NAME:latest se ha creado correctamente\n"

                # Crear una imagen con el tag remoto para el Ãºltimo commit `${{ env.TAG }}`
                echo "ðŸ”— Creando un enlace simbÃ³lico a ${{ secrets.azurecr_uri }}/$IMAGE_NAME:${{ env.TAG }}"
                docker tag $IMAGE_NAME:${{ env.TAG }} ${{ secrets.azurecr_uri }}/$IMAGE_NAME:${{ env.TAG }}
                # Confirmar que la imagen se ha creado
                echo "âœ… La imagen ${{ secrets.azurecr_uri }}/$IMAGE_NAME:${{ env.TAG }} se ha creado correctamente\n"

                # Crear una imagen con el tag remoto para el tag `latest`
                echo "ðŸ”— Creando un enlace simbÃ³lico a ${{ secrets.azurecr_uri }}/$IMAGE_NAME:latest"
                docker tag $IMAGE_NAME:${{ env.TAG }} ${{ secrets.azurecr_uri }}/$IMAGE_NAME:latest
                # Confirmar que la imagen se ha creado
                echo "âœ… La imagen ${{ secrets.azurecr_uri }}/$IMAGE_NAME:latest se ha creado correctamente\n"

            - name: Subir imagen de Docker
              run: |
                # Enviar la imagen al registro de contenedores de Azure Container Registry
                echo "ðŸ“¤ Enviando la imagen ${{ secrets.azurecr_uri }}/$IMAGE_NAME:${{ env.TAG }} al registro de contenedores de Azure Container Registry"
                docker push ${{ secrets.azurecr_uri }}/$IMAGE_NAME:${{ env.TAG }}

                # Enviando la imagen con el tag latest
                echo "\nðŸ“¤ Enviando la imagen ${{ secrets.azurecr_uri }}/$IMAGE_NAME:latest al registro de contenedores de Azure Container Registry"
                docker push ${{ secrets.azurecr_uri }}/$IMAGE_NAME:latest